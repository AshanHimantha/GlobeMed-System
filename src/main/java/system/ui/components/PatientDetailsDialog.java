/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package system.ui.components;

import java.awt.BorderLayout;
import java.time.format.DateTimeFormatter;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import system.model.Appointment;
import system.model.Patient;
import system.service.AppointmentService;

/**
 *
 * @author User
 */
public class PatientDetailsDialog extends JDialog {

    private final Patient patient;
    private final AppointmentService appointmentService;

    private DefaultTableModel tableModel;

    /**
     * Creates new form PatientDetailsDialog to show appointment history.
     */
    public PatientDetailsDialog(java.awt.Frame parent, boolean modal, Patient patient) {
        super(parent, modal);
        this.patient = patient;
        this.appointmentService = new AppointmentService();
        initComponents();

        // --- Configure the Dialog ---
        setTitle("Appointment History for: " + patient.getName());
        setLocationRelativeTo(parent);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        // Fetch and display appointments immediately
        fetchAndDisplayAppointments();
    }

    private void fetchAndDisplayAppointments() {
        List<Appointment> appointments = appointmentService.getAppointmentsByPatient(patient);

        // Clear previous data
        tableModel.setRowCount(0);

        if (appointments.isEmpty()) {
            // Handle case with no appointments
            tableModel.addRow(new Object[]{"No appointments found for this patient.", "", "", ""});
        } else {
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");
            for (Appointment app : appointments) {
                tableModel.addRow(new Object[]{
                    app.getId(),
                    app.getAppointmentDateTime().format(formatter),
                    app.getServiceName(),
                    app.getStatus()
                });
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new BorderLayout());

        // --- Table Setup ---
        String[] columnNames = {"ID", "Date & Time", "Service", "Status"};
        tableModel = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Make table cells non-editable
            }
        };
        JTable appointmentsTable = new JTable(tableModel);
        appointmentsTable.setFillsViewportHeight(true);
        appointmentsTable.setFocusable(false);

        JScrollPane scrollPane = new JScrollPane(appointmentsTable);
        scrollPane.putClientProperty("JComponent.outline", "none"); // Disable the focus glow
        getContentPane().add(scrollPane, BorderLayout.CENTER);

        setSize(600, 400); // Set a default size
    }

    // No variables needed from the form editor
}

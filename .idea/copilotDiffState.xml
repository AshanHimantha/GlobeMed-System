<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/system/ui/panels/ReportGeneratorPanel.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/system/ui/panels/ReportGeneratorPanel.java" />
              <option name="originalContent" value="package system.ui.panels;&#10;&#10;import java.awt.BorderLayout;&#10;import java.awt.Color;&#10;import java.awt.Dimension;&#10;import java.awt.FlowLayout;&#10;import java.awt.Font;&#10;import java.awt.GridBagConstraints;&#10;import java.awt.GridBagLayout;&#10;import java.awt.Insets;&#10;import java.awt.Image;&#10;import java.text.NumberFormat;&#10;import java.time.LocalDate;&#10;import java.time.ZoneId;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;import javax.swing.BorderFactory;&#10;import javax.swing.ImageIcon;&#10;import javax.swing.JButton;&#10;import javax.swing.JComboBox;&#10;import javax.swing.JLabel;&#10;import javax.swing.JOptionPane;&#10;import javax.swing.JPanel;&#10;import javax.swing.JScrollPane;&#10;import javax.swing.JSpinner;&#10;import javax.swing.SpinnerDateModel;&#10;import javax.swing.JSplitPane;&#10;import javax.swing.SwingConstants;&#10;import javax.swing.BoxLayout;&#10;import system.model.Appointment;&#10;import system.model.Claim;&#10;import system.patterns.visitor.ActivityReportVisitor;&#10;import system.patterns.visitor.FinancialReportVisitor;&#10;import system.patterns.visitor.ReportVisitor;&#10;import system.patterns.visitor.Visitable;&#10;import system.service.AppointmentService;&#10;import system.service.ClaimService;&#10;import system.ui.components.RoundedPanel;&#10;&#10;/**&#10; *&#10; * @author User&#10; */&#10;public class ReportGeneratorPanel extends javax.swing.JPanel {&#10;&#10;    // --- Services to fetch our data &quot;elements&quot; ---&#10;    private final AppointmentService appointmentService;&#10;    private final ClaimService claimService;&#10;&#10;    // --- UI Components ---&#10;    private JComboBox&lt;String&gt; reportTypeComboBox;&#10;    private JButton generateButton;&#10;    private JSpinner fromDateSpinner;&#10;    private JSpinner toDateSpinner;&#10;    private JPanel cardsPanel;&#10;    private JSplitPane mainSplitPane;&#10;    private JPanel formPanel;&#10;    private JPanel resultsPanel;&#10;&#10;    public ReportGeneratorPanel() {&#10;        this.appointmentService = new AppointmentService();&#10;        this.claimService = new ClaimService();&#10;&#10;        initComponentsManual(); // Build the UI&#10;&#10;        // Populate the combo box with report options&#10;        reportTypeComboBox.addItem(&quot;Financial Report&quot;);&#10;        reportTypeComboBox.addItem(&quot;System Activity Report&quot;);&#10;&#10;        // Add listener to the generate button&#10;        generateButton.addActionListener(e -&gt; onGenerateReport());&#10;    }&#10;    &#10;    private void onGenerateReport() {&#10;        String selectedReport = (String) reportTypeComboBox.getSelectedItem();&#10;        if (selectedReport == null) {&#10;            JOptionPane.showMessageDialog(this, &quot;Please select a report type.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#10;            return;&#10;        }&#10;&#10;        // Get date range&#10;        Date fromDate = (Date) fromDateSpinner.getValue();&#10;        Date toDate = (Date) toDateSpinner.getValue();&#10;&#10;        if (fromDate.after(toDate)) {&#10;            JOptionPane.showMessageDialog(this, &quot;From date must be before or equal to the To date.&quot;, &quot;Invalid Date Range&quot;, JOptionPane.ERROR_MESSAGE);&#10;            return;&#10;        }&#10;&#10;        // Clear previous results and show loading&#10;        cardsPanel.removeAll();&#10;        cardsPanel.add(createLoadingCard());&#10;        cardsPanel.revalidate();&#10;        cardsPanel.repaint();&#10;&#10;        // Convert dates to LocalDate for filtering&#10;        LocalDate fromLocalDate = fromDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();&#10;        LocalDate toLocalDate = toDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();&#10;&#10;        // --- VISITOR PATTERN WITH DATE FILTERING ---&#10;        ReportVisitor visitor;&#10;        if (&quot;Financial Report&quot;.equals(selectedReport)) {&#10;            visitor = new FinancialReportVisitor();&#10;        } else {&#10;            visitor = new ActivityReportVisitor();&#10;        }&#10;&#10;        // Gather filtered data elements&#10;        List&lt;Visitable&gt; dataElements = new ArrayList&lt;&gt;();&#10;&#10;        // Filter appointments by date range&#10;        List&lt;Appointment&gt; allAppointments = appointmentService.getAllAppointments();&#10;        for (Appointment appointment : allAppointments) {&#10;            LocalDate appointmentDate = appointment.getAppointmentDateTime().toLocalDate();&#10;            if (!appointmentDate.isBefore(fromLocalDate) &amp;&amp; !appointmentDate.isAfter(toLocalDate)) {&#10;                dataElements.add(appointment);&#10;            }&#10;        }&#10;&#10;        // Filter claims by date range&#10;        List&lt;Claim&gt; allClaims = claimService.getAllClaims();&#10;        for (Claim claim : allClaims) {&#10;            LocalDate claimDate = claim.getClaimDate();&#10;            if (!claimDate.isBefore(fromLocalDate) &amp;&amp; !claimDate.isAfter(toLocalDate)) {&#10;                dataElements.add(claim);&#10;            }&#10;        }&#10;&#10;        // Apply visitor pattern&#10;        for (Visitable element : dataElements) {&#10;            element.accept(visitor);&#10;        }&#10;&#10;        // Display results in card format&#10;        displayReportCards(visitor, selectedReport, dataElements.size());&#10;    }&#10;&#10;    // --- Enhanced UI building method to match AppointmentPanel layout ---&#10;    private void initComponentsManual() {&#10;        setLayout(new BorderLayout(10, 0));&#10;        setBackground(Color.WHITE);&#10;&#10;        // Header Panel (similar to AppointmentPanel)&#10;        JPanel headerPanel = new JPanel();&#10;        headerPanel.setBackground(new Color(247, 247, 247));&#10;        headerPanel.setMaximumSize(new Dimension(32767, 90));&#10;        headerPanel.setMinimumSize(new Dimension(0, 90));&#10;        headerPanel.setPreferredSize(new Dimension(987, 90));&#10;        headerPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));&#10;&#10;        JPanel headerContent = new JPanel();&#10;        headerContent.setOpaque(false);&#10;        headerContent.setLayout(new BorderLayout());&#10;&#10;        JLabel titleLabel = new JLabel(&quot;Report Generator&quot;);&#10;        titleLabel.setFont(new Font(&quot;Inter 18pt&quot;, Font.BOLD, 24));&#10;        titleLabel.setForeground(new Color(5, 5, 5));&#10;        headerContent.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        JLabel subtitleLabel = new JLabel(&quot;Generate financial and activity reports with date filtering&quot;);&#10;        subtitleLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        subtitleLabel.setForeground(new Color(102, 102, 102));&#10;        headerContent.add(subtitleLabel, BorderLayout.SOUTH);&#10;&#10;        headerPanel.add(headerContent);&#10;        add(headerPanel, BorderLayout.PAGE_START);&#10;&#10;        // Main Content Panel with Split Pane (similar to AppointmentPanel)&#10;        JPanel mainPanel = new JPanel();&#10;        mainPanel.setBackground(new Color(247, 247, 247));&#10;        mainPanel.setMinimumSize(new Dimension(900, 700));&#10;        mainPanel.setPreferredSize(new Dimension(903, 700));&#10;        mainPanel.setLayout(new BorderLayout(10, 10));&#10;        mainPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));&#10;&#10;        // Create Split Pane&#10;        mainSplitPane = new JSplitPane();&#10;        mainSplitPane.setDividerLocation(360);&#10;        mainSplitPane.setDividerSize(0);&#10;        mainSplitPane.setMaximumSize(new Dimension(2147483647, 500));&#10;        mainSplitPane.setMinimumSize(new Dimension(800, 300));&#10;        mainSplitPane.setPreferredSize(new Dimension(1250, 510));&#10;&#10;        // Left Panel - Report Configuration Form&#10;        createFormPanel();&#10;        mainSplitPane.setLeftComponent(formPanel);&#10;&#10;        // Right Panel - Report Results&#10;        createResultsPanel();&#10;        mainSplitPane.setRightComponent(resultsPanel);&#10;&#10;        mainPanel.add(mainSplitPane, BorderLayout.CENTER);&#10;        add(mainPanel, BorderLayout.CENTER);&#10;    }&#10;&#10;    private void createFormPanel() {&#10;        formPanel = new JPanel();&#10;        formPanel.setBackground(new Color(247, 247, 247));&#10;        formPanel.setMaximumSize(new Dimension(300, 32767));&#10;        formPanel.setMinimumSize(new Dimension(300, 100));&#10;        formPanel.setPreferredSize(new Dimension(300, 510));&#10;        formPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 30, 0));&#10;&#10;        // Create the form card using GroupLayout like AppointmentPanel&#10;        RoundedPanel formCard = new RoundedPanel();&#10;        formCard.setBackground(Color.WHITE);&#10;        formCard.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        formCard.setMinimumSize(new Dimension(330, 600));&#10;&#10;        // Form elements&#10;        JLabel formTitle = new JLabel(&quot;Generate Report&quot;);&#10;        formTitle.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 24));&#10;        formTitle.setForeground(Color.BLACK);&#10;&#10;        JLabel formSubtitle = new JLabel(&quot;Configure and generate system reports&quot;);&#10;        formSubtitle.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        formSubtitle.setForeground(new Color(153, 153, 153));&#10;&#10;        JLabel reportLabel = new JLabel(&quot;Report Type&quot;);&#10;        reportLabel.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        reportLabel.setForeground(new Color(51, 51, 51));&#10;&#10;        reportTypeComboBox = new JComboBox&lt;&gt;();&#10;        reportTypeComboBox.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        reportTypeComboBox.setBackground(Color.WHITE);&#10;&#10;        JLabel fromLabel = new JLabel(&quot;From Date&quot;);&#10;        fromLabel.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        fromLabel.setForeground(new Color(51, 51, 51));&#10;&#10;        fromDateSpinner = new JSpinner(new SpinnerDateModel());&#10;        JSpinner.DateEditor fromDateEditor = new JSpinner.DateEditor(fromDateSpinner, &quot;dd/MM/yyyy&quot;);&#10;        fromDateSpinner.setEditor(fromDateEditor);&#10;        fromDateSpinner.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        Date defaultFromDate = Date.from(LocalDate.now().minusDays(30).atStartOfDay(ZoneId.systemDefault()).toInstant());&#10;        fromDateSpinner.setValue(defaultFromDate);&#10;&#10;        JLabel toLabel = new JLabel(&quot;To Date&quot;);&#10;        toLabel.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        toLabel.setForeground(new Color(51, 51, 51));&#10;&#10;        toDateSpinner = new JSpinner(new SpinnerDateModel());&#10;        JSpinner.DateEditor toDateEditor = new JSpinner.DateEditor(toDateSpinner, &quot;dd/MM/yyyy&quot;);&#10;        toDateSpinner.setEditor(toDateEditor);&#10;        toDateSpinner.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        toDateSpinner.setValue(new Date());&#10;&#10;        generateButton = new JButton(&quot;Generate Report&quot;);&#10;        generateButton.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        generateButton.setForeground(Color.WHITE);&#10;        generateButton.setBackground(new Color(0, 153, 255));&#10;&#10;        // Use GroupLayout like AppointmentPanel&#10;        javax.swing.GroupLayout formCardLayout = new javax.swing.GroupLayout(formCard);&#10;        formCard.setLayout(formCardLayout);&#10;        formCardLayout.setHorizontalGroup(&#10;            formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(formCardLayout.createSequentialGroup()&#10;                .addGap(13, 13, 13)&#10;                .addGroup(formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;                    .addComponent(reportTypeComboBox, 0, 312, Short.MAX_VALUE)&#10;                    .addComponent(fromDateSpinner)&#10;                    .addComponent(toDateSpinner)&#10;                    .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)&#10;                    .addGroup(formCardLayout.createSequentialGroup()&#10;                        .addGroup(formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;                            .addComponent(formTitle)&#10;                            .addComponent(formSubtitle)&#10;                            .addComponent(reportLabel)&#10;                            .addComponent(fromLabel)&#10;                            .addComponent(toLabel))&#10;                        .addGap(0, 0, Short.MAX_VALUE)))&#10;                .addGap(14, 14, 14))&#10;        );&#10;        formCardLayout.setVerticalGroup(&#10;            formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(formCardLayout.createSequentialGroup()&#10;                .addGap(20, 20, 20)&#10;                .addComponent(formTitle)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(formSubtitle)&#10;                .addGap(18, 18, 18)&#10;                .addComponent(reportLabel)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(reportTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(12, 12, 12)&#10;                .addComponent(fromLabel)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(fromDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(12, 12, 12)&#10;                .addComponent(toLabel)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(toDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(18, 18, 18)&#10;                .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(28, 28, 28))&#10;        );&#10;&#10;        formPanel.add(formCard);&#10;    }&#10;&#10;    private void createResultsPanel() {&#10;        resultsPanel = new JPanel();&#10;        resultsPanel.setBackground(new Color(247, 247, 247));&#10;        resultsPanel.setMaximumSize(new Dimension(2147483647, 600));&#10;        resultsPanel.setPreferredSize(new Dimension(831, 600));&#10;        resultsPanel.setLayout(new BorderLayout(30, 0));&#10;&#10;        // Create the results card exactly like AppointmentPanel's roundedPanel2&#10;        RoundedPanel resultsCard = new RoundedPanel();&#10;        resultsCard.setBackground(Color.WHITE);&#10;        resultsCard.setForeground(new Color(234, 234, 234));&#10;        resultsCard.setMaximumSize(new Dimension(32767, 600));&#10;        resultsCard.setMinimumSize(new Dimension(0, 600));&#10;        resultsCard.setPreferredSize(new Dimension(811, 600));&#10;&#10;        // Header elements&#10;        JLabel resultsTitle = new JLabel(&quot;Report Results&quot;);&#10;        resultsTitle.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 24));&#10;        resultsTitle.setForeground(Color.BLACK);&#10;&#10;        JButton refreshButton = new JButton(&quot;Refresh&quot;);&#10;        refreshButton.setFont(new Font(&quot;Inter 18pt Medium&quot;, Font.PLAIN, 12));&#10;        refreshButton.setForeground(Color.WHITE);&#10;        refreshButton.setBackground(new Color(0, 153, 255));&#10;        refreshButton.addActionListener(e -&gt; onGenerateReport());&#10;&#10;        // Cards container&#10;        cardsPanel = new JPanel();&#10;        cardsPanel.setBackground(Color.WHITE);&#10;        cardsPanel.setForeground(Color.WHITE);&#10;        cardsPanel.setLayout(new BoxLayout(cardsPanel, BoxLayout.Y_AXIS));&#10;&#10;        JScrollPane cardsScrollPane = new JScrollPane(cardsPanel);&#10;        cardsScrollPane.setBackground(Color.WHITE);&#10;        cardsScrollPane.setBorder(BorderFactory.createEmptyBorder(1, 1, 30, 1));&#10;        cardsScrollPane.setForeground(Color.WHITE);&#10;&#10;        // Add initial instruction card&#10;        cardsPanel.add(createInstructionCard());&#10;&#10;        // Use GroupLayout exactly like AppointmentPanel's roundedPanel2&#10;        javax.swing.GroupLayout resultsCardLayout = new javax.swing.GroupLayout(resultsCard);&#10;        resultsCard.setLayout(resultsCardLayout);&#10;        resultsCardLayout.setHorizontalGroup(&#10;            resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsCardLayout.createSequentialGroup()&#10;                .addGap(21, 21, 21)&#10;                .addGroup(resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;                    .addGroup(resultsCardLayout.createSequentialGroup()&#10;                        .addComponent(resultsTitle)&#10;                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)&#10;                        .addComponent(refreshButton))&#10;                    .addComponent(cardsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE))&#10;                .addGap(20, 20, 20))&#10;        );&#10;        resultsCardLayout.setVerticalGroup(&#10;            resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(resultsCardLayout.createSequentialGroup()&#10;                .addGap(24, 24, 24)&#10;                .addGroup(resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)&#10;                    .addComponent(resultsTitle)&#10;                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))&#10;                .addGap(18, 18, 18)&#10;                .addComponent(cardsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)&#10;                .addContainerGap())&#10;        );&#10;&#10;        resultsPanel.add(resultsCard, BorderLayout.CENTER);&#10;    }&#10;&#10;    private void displayReportCards(ReportVisitor visitor, String reportType, int totalElements) {&#10;        cardsPanel.removeAll();&#10;&#10;        List&lt;RoundedPanel&gt; cards;&#10;&#10;        if (&quot;Financial Report&quot;.equals(reportType)) {&#10;            cards = getFinancialReportCards((FinancialReportVisitor) visitor, totalElements);&#10;        } else {&#10;            cards = getActivityReportCards((ActivityReportVisitor) visitor, totalElements);&#10;        }&#10;&#10;        // Add cards with gaps between them&#10;        for (int i = 0; i &lt; cards.size(); i++) {&#10;            RoundedPanel card = cards.get(i);&#10;            card.setAlignmentX(JPanel.LEFT_ALIGNMENT);&#10;            card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));&#10;            cardsPanel.add(card);&#10;&#10;            // Add gap between cards (except after the last card)&#10;            if (i &lt; cards.size() - 1) {&#10;                cardsPanel.add(javax.swing.Box.createVerticalStrut(10));&#10;            }&#10;        }&#10;&#10;        cardsPanel.revalidate();&#10;        cardsPanel.repaint();&#10;        &#10;        // Simple formatting - just add &quot;Rs.&quot; prefix to the amounts&#10;    private List&lt;RoundedPanel&gt; getFinancialReportCards(FinancialReportVisitor visitor, int totalElements) {&#10;            &quot;Rs. &quot; + String.format(&quot;%.2f&quot;, visitor.getTotalRevenue()),&#10;        NumberFormat currencyFormat = NumberFormat.getCurrencyInstance();&#10;&#10;        cards.add(createModernMetricCard(&quot;Total Revenue&quot;,&#10;            &quot;Rs. &quot; + String.format(&quot;%.2f&quot;, visitor.getTotalRevenueFromAppointments()),&#10;            &quot;Revenue from all sources&quot;, &quot;profit-up_1.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Direct Payments&quot;,&#10;            &quot;Rs. &quot; + String.format(&quot;%.2f&quot;, visitor.getTotalRevenueFromClaims()),&#10;            visitor.getVisitedAppointments() + &quot; appointments processed&quot;, &quot;cash-payment.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Insurance Claims&quot;,&#10;            currencyFormat.format(visitor.getTotalRevenueFromClaims()),&#10;            visitor.getVisitedClaims() + &quot; claims processed&quot;, &quot;claim.png&quot;));&#10;&#10;        Date fromDate = (Date) fromDateSpinner.getValue();&#10;        Date toDate = (Date) toDateSpinner.getValue();&#10;        cards.add(createModernSummaryCard(&quot;Report Summary&quot;,&#10;            &quot;Total Elements: &quot; + totalElements + &quot;\n&quot; +&#10;            &quot;Appointments: &quot; + visitor.getVisitedAppointments() + &quot;\n&quot; +&#10;            &quot;Claims: &quot; + visitor.getVisitedClaims() + &quot;\n&quot; +&#10;            &quot;Period: &quot; + new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;).format(fromDate) +&#10;            &quot; to &quot; + new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;).format(toDate),&#10;            &quot;report.png&quot;));&#10;&#10;        return cards;&#10;    }&#10;&#10;    private List&lt;RoundedPanel&gt; getActivityReportCards(ActivityReportVisitor visitor, int totalElements) {&#10;        List&lt;RoundedPanel&gt; cards = new ArrayList&lt;&gt;();&#10;&#10;        cards.add(createModernMetricCard(&quot;Scheduled Appointments&quot;,&#10;            String.valueOf(visitor.getScheduledAppointments()),&#10;            &quot;Upcoming appointments&quot;, &quot;accounting.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Completed Appointments&quot;,&#10;            String.valueOf(visitor.getCompletedAppointments()),&#10;            &quot;Finished appointments&quot;, &quot;check.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Pending Claims&quot;,&#10;            String.valueOf(visitor.getPendingClaims()),&#10;            &quot;Claims awaiting processing&quot;, &quot;online-doctor.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Closed Claims&quot;,&#10;            String.valueOf(visitor.getClosedClaims()),&#10;            &quot;Processed claims&quot;, &quot;safety.png&quot;));&#10;&#10;        cards.add(createModernSummaryCard(&quot;Activity Summary&quot;,&#10;            &quot;Total Elements: &quot; + totalElements + &quot;\n&quot; +&#10;            &quot;Total Appointments: &quot; + visitor.getTotalAppointments() + &quot;\n&quot; +&#10;            &quot;Total Claims: &quot; + visitor.getTotalClaims(),&#10;            &quot;health-report.png&quot;));&#10;&#10;        return cards;&#10;    }&#10;&#10;    private RoundedPanel createModernMetricCard(String title, String mainValue, String subtitle, String iconName) {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        // Make cards full width like AppointmentCards&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));&#10;        card.setMinimumSize(new Dimension(400, 120));&#10;        card.setPreferredSize(new Dimension(800, 120));&#10;&#10;        // Left content panel for text&#10;        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));&#10;        leftPanel.setOpaque(false);&#10;&#10;        // Title at top left&#10;        JLabel titleLabel = new JLabel(title);&#10;        titleLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        titleLabel.setForeground(new Color(44, 62, 80));&#10;        leftPanel.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        // Main value in center left&#10;        JLabel valueLabel = new JLabel(mainValue);&#10;        valueLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 28));&#10;        valueLabel.setForeground(new Color(52, 152, 219));&#10;        leftPanel.add(valueLabel, BorderLayout.CENTER);&#10;&#10;        // Subtitle at bottom left&#10;        JLabel subtitleLabel = new JLabel(subtitle);&#10;        subtitleLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        subtitleLabel.setForeground(new Color(127, 140, 141));&#10;        leftPanel.add(subtitleLabel, BorderLayout.SOUTH);&#10;&#10;        card.add(leftPanel, BorderLayout.CENTER);&#10;&#10;        // Right panel for icon at top right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 120));&#10;&#10;        // Icon at top right&#10;        try {&#10;            ImageIcon icon = new ImageIcon(getClass().getResource(&quot;/img/&quot; + iconName));&#10;            Image scaledImage = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);&#10;            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));&#10;            iconLabel.setHorizontalAlignment(SwingConstants.CENTER);&#10;            iconLabel.setVerticalAlignment(SwingConstants.TOP);&#10;            iconLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(iconLabel, BorderLayout.NORTH);&#10;        } catch (Exception e) {&#10;            // Fallback: create a simple colored icon as placeholder&#10;            JLabel placeholderIcon = new JLabel(&quot;●&quot;);&#10;            placeholderIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 32));&#10;            placeholderIcon.setForeground(new Color(52, 152, 219));&#10;            placeholderIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;            placeholderIcon.setVerticalAlignment(SwingConstants.TOP);&#10;            placeholderIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(placeholderIcon, BorderLayout.NORTH);&#10;        }&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    private RoundedPanel createModernSummaryCard(String title, String content, String iconName) {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        // Make cards full width like AppointmentCards&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 140));&#10;        card.setMinimumSize(new Dimension(400, 140));&#10;        card.setPreferredSize(new Dimension(800, 140));&#10;&#10;        // Left content panel for text&#10;        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));&#10;        leftPanel.setOpaque(false);&#10;&#10;        // Title at top left&#10;        JLabel titleLabel = new JLabel(title);&#10;        titleLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        titleLabel.setForeground(new Color(44, 62, 80));&#10;        leftPanel.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        // Content in center left&#10;        String[] lines = content.split(&quot;\n&quot;);&#10;        JPanel contentPanel = new JPanel();&#10;        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));&#10;        contentPanel.setOpaque(false);&#10;&#10;        for (int i = 0; i &lt; lines.length &amp;&amp; i &lt; 5; i++) {&#10;            JLabel lineLabel = new JLabel(lines[i]);&#10;            lineLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;            lineLabel.setForeground(new Color(52, 73, 94));&#10;            lineLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);&#10;            contentPanel.add(lineLabel);&#10;        }&#10;&#10;        leftPanel.add(contentPanel, BorderLayout.CENTER);&#10;        card.add(leftPanel, BorderLayout.CENTER);&#10;&#10;        // Right panel for icon at top right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 140));&#10;&#10;        // Icon at top right&#10;        try {&#10;            ImageIcon icon = new ImageIcon(getClass().getResource(&quot;/img/&quot; + iconName));&#10;            Image scaledImage = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);&#10;            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));&#10;            iconLabel.setHorizontalAlignment(SwingConstants.CENTER);&#10;            iconLabel.setVerticalAlignment(SwingConstants.TOP);&#10;            iconLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(iconLabel, BorderLayout.NORTH);&#10;        } catch (Exception e) {&#10;            // Fallback: create a simple colored shape as placeholder&#10;            JLabel placeholderIcon = new JLabel(&quot;◆&quot;);&#10;            placeholderIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 28));&#10;            placeholderIcon.setForeground(new Color(149, 165, 166));&#10;            placeholderIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;            placeholderIcon.setVerticalAlignment(SwingConstants.TOP);&#10;            placeholderIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(placeholderIcon, BorderLayout.NORTH);&#10;        }&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    private RoundedPanel createLoadingCard() {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));&#10;        card.setMinimumSize(new Dimension(400, 120));&#10;        card.setPreferredSize(new Dimension(800, 120));&#10;&#10;        // Loading text on left&#10;        JLabel loadingLabel = new JLabel(&quot;Generating report...&quot;);&#10;        loadingLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        loadingLabel.setForeground(new Color(52, 152, 219));&#10;        card.add(loadingLabel, BorderLayout.CENTER);&#10;&#10;        // Loading icon on right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 120));&#10;&#10;        JLabel loadingIcon = new JLabel(&quot;⟳&quot;);&#10;        loadingIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 32));&#10;        loadingIcon.setForeground(new Color(52, 152, 219));&#10;        loadingIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;        loadingIcon.setVerticalAlignment(SwingConstants.TOP);&#10;        loadingIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;        rightPanel.add(loadingIcon, BorderLayout.NORTH);&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    private RoundedPanel createInstructionCard() {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 140));&#10;        card.setMinimumSize(new Dimension(400, 140));&#10;        card.setPreferredSize(new Dimension(800, 140));&#10;&#10;        // Left content panel for text&#10;        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));&#10;        leftPanel.setOpaque(false);&#10;&#10;        // Title at top left&#10;        JLabel titleLabel = new JLabel(&quot;Welcome to Reports&quot;);&#10;        titleLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        titleLabel.setForeground(new Color(44, 62, 80));&#10;        leftPanel.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        // Instructions in center left&#10;        JPanel instructionPanel = new JPanel();&#10;        instructionPanel.setLayout(new BoxLayout(instructionPanel, BoxLayout.Y_AXIS));&#10;        instructionPanel.setOpaque(false);&#10;&#10;        String[] instructions = {&#10;            &quot;1. Select report type &amp; date range&quot;,&#10;            &quot;2. Click Generate to view results&quot;,&#10;            &quot;3. Data will appear as cards below&quot;&#10;        };&#10;&#10;        for (String instruction : instructions) {&#10;            JLabel lineLabel = new JLabel(instruction);&#10;            lineLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;            lineLabel.setForeground(new Color(52, 73, 94));&#10;            lineLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);&#10;            instructionPanel.add(lineLabel);&#10;        }&#10;&#10;        leftPanel.add(instructionPanel, BorderLayout.CENTER);&#10;        card.add(leftPanel, BorderLayout.CENTER);&#10;&#10;        // Right panel for icon at top right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 140));&#10;&#10;        // Welcome icon&#10;        try {&#10;            ImageIcon icon = new ImageIcon(getClass().getResource(&quot;/img/dashboard.png&quot;));&#10;            Image scaledImage = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);&#10;            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));&#10;            iconLabel.setHorizontalAlignment(SwingConstants.CENTER);&#10;            iconLabel.setVerticalAlignment(SwingConstants.TOP);&#10;            iconLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(iconLabel, BorderLayout.NORTH);&#10;        } catch (Exception e) {&#10;            // Fallback icon&#10;            JLabel placeholderIcon = new JLabel(&quot;&quot;);&#10;            placeholderIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 32));&#10;            placeholderIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;            placeholderIcon.setVerticalAlignment(SwingConstants.TOP);&#10;            placeholderIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(placeholderIcon, BorderLayout.NORTH);&#10;        }&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    // Variables declaration - do not modify//GEN-BEGIN:variables&#10;    // End of variables declaration//GEN-END:variables&#10;}&#10;" />
              <option name="updatedContent" value="package system.ui.panels;&#10;&#10;import java.awt.BorderLayout;&#10;import java.awt.Color;&#10;import java.awt.Dimension;&#10;import java.awt.FlowLayout;&#10;import java.awt.Font;&#10;import java.awt.GridBagConstraints;&#10;import java.awt.GridBagLayout;&#10;import java.awt.Insets;&#10;import java.awt.Image;&#10;import java.text.NumberFormat;&#10;import java.time.LocalDate;&#10;import java.time.ZoneId;&#10;import java.util.ArrayList;&#10;import java.util.Date;&#10;import java.util.List;&#10;import javax.swing.BorderFactory;&#10;import javax.swing.ImageIcon;&#10;import javax.swing.JButton;&#10;import javax.swing.JComboBox;&#10;import javax.swing.JLabel;&#10;import javax.swing.JOptionPane;&#10;import javax.swing.JPanel;&#10;import javax.swing.JScrollPane;&#10;import javax.swing.JSpinner;&#10;import javax.swing.SpinnerDateModel;&#10;import javax.swing.JSplitPane;&#10;import javax.swing.SwingConstants;&#10;import javax.swing.BoxLayout;&#10;import system.model.Appointment;&#10;import system.model.Claim;&#10;import system.patterns.visitor.ActivityReportVisitor;&#10;import system.patterns.visitor.FinancialReportVisitor;&#10;import system.patterns.visitor.ReportVisitor;&#10;import system.patterns.visitor.Visitable;&#10;import system.service.AppointmentService;&#10;import system.service.ClaimService;&#10;import system.ui.components.RoundedPanel;&#10;&#10;/**&#10; *&#10; * @author User&#10; */&#10;public class ReportGeneratorPanel extends javax.swing.JPanel {&#10;&#10;    // --- Services to fetch our data &quot;elements&quot; ---&#10;    private final AppointmentService appointmentService;&#10;    private final ClaimService claimService;&#10;&#10;    // --- UI Components ---&#10;    private JComboBox&lt;String&gt; reportTypeComboBox;&#10;    private JButton generateButton;&#10;    private JSpinner fromDateSpinner;&#10;    private JSpinner toDateSpinner;&#10;    private JPanel cardsPanel;&#10;    private JSplitPane mainSplitPane;&#10;    private JPanel formPanel;&#10;    private JPanel resultsPanel;&#10;&#10;    public ReportGeneratorPanel() {&#10;        this.appointmentService = new AppointmentService();&#10;        this.claimService = new ClaimService();&#10;&#10;        initComponentsManual(); // Build the UI&#10;&#10;        // Populate the combo box with report options&#10;        reportTypeComboBox.addItem(&quot;Financial Report&quot;);&#10;        reportTypeComboBox.addItem(&quot;System Activity Report&quot;);&#10;&#10;        // Add listener to the generate button&#10;        generateButton.addActionListener(e -&gt; onGenerateReport());&#10;    }&#10;    &#10;    private void onGenerateReport() {&#10;        String selectedReport = (String) reportTypeComboBox.getSelectedItem();&#10;        if (selectedReport == null) {&#10;            JOptionPane.showMessageDialog(this, &quot;Please select a report type.&quot;, &quot;Error&quot;, JOptionPane.ERROR_MESSAGE);&#10;            return;&#10;        }&#10;&#10;        // Get date range&#10;        Date fromDate = (Date) fromDateSpinner.getValue();&#10;        Date toDate = (Date) toDateSpinner.getValue();&#10;&#10;        if (fromDate.after(toDate)) {&#10;            JOptionPane.showMessageDialog(this, &quot;From date must be before or equal to the To date.&quot;, &quot;Invalid Date Range&quot;, JOptionPane.ERROR_MESSAGE);&#10;            return;&#10;        }&#10;&#10;        // Clear previous results and show loading&#10;        cardsPanel.removeAll();&#10;        cardsPanel.add(createLoadingCard());&#10;        cardsPanel.revalidate();&#10;        cardsPanel.repaint();&#10;&#10;        // Convert dates to LocalDate for filtering&#10;        LocalDate fromLocalDate = fromDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();&#10;        LocalDate toLocalDate = toDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();&#10;&#10;        // --- VISITOR PATTERN WITH DATE FILTERING ---&#10;        ReportVisitor visitor;&#10;        if (&quot;Financial Report&quot;.equals(selectedReport)) {&#10;            visitor = new FinancialReportVisitor();&#10;        } else {&#10;            visitor = new ActivityReportVisitor();&#10;        }&#10;&#10;        // Gather filtered data elements&#10;        List&lt;Visitable&gt; dataElements = new ArrayList&lt;&gt;();&#10;&#10;        // Filter appointments by date range&#10;        List&lt;Appointment&gt; allAppointments = appointmentService.getAllAppointments();&#10;        for (Appointment appointment : allAppointments) {&#10;            LocalDate appointmentDate = appointment.getAppointmentDateTime().toLocalDate();&#10;            if (!appointmentDate.isBefore(fromLocalDate) &amp;&amp; !appointmentDate.isAfter(toLocalDate)) {&#10;                dataElements.add(appointment);&#10;            }&#10;        }&#10;&#10;        // Filter claims by date range&#10;        List&lt;Claim&gt; allClaims = claimService.getAllClaims();&#10;        for (Claim claim : allClaims) {&#10;            LocalDate claimDate = claim.getClaimDate();&#10;            if (!claimDate.isBefore(fromLocalDate) &amp;&amp; !claimDate.isAfter(toLocalDate)) {&#10;                dataElements.add(claim);&#10;            }&#10;        }&#10;&#10;        // Apply visitor pattern&#10;        for (Visitable element : dataElements) {&#10;            element.accept(visitor);&#10;        }&#10;&#10;        // Display results in card format&#10;        displayReportCards(visitor, selectedReport, dataElements.size());&#10;    }&#10;&#10;    // --- Enhanced UI building method to match AppointmentPanel layout ---&#10;    private void initComponentsManual() {&#10;        setLayout(new BorderLayout(10, 0));&#10;        setBackground(Color.WHITE);&#10;&#10;        // Header Panel (similar to AppointmentPanel)&#10;        JPanel headerPanel = new JPanel();&#10;        headerPanel.setBackground(new Color(247, 247, 247));&#10;        headerPanel.setMaximumSize(new Dimension(32767, 90));&#10;        headerPanel.setMinimumSize(new Dimension(0, 90));&#10;        headerPanel.setPreferredSize(new Dimension(987, 90));&#10;        headerPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 20, 20));&#10;&#10;        JPanel headerContent = new JPanel();&#10;        headerContent.setOpaque(false);&#10;        headerContent.setLayout(new BorderLayout());&#10;&#10;        JLabel titleLabel = new JLabel(&quot;Report Generator&quot;);&#10;        titleLabel.setFont(new Font(&quot;Inter 18pt&quot;, Font.BOLD, 24));&#10;        titleLabel.setForeground(new Color(5, 5, 5));&#10;        headerContent.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        JLabel subtitleLabel = new JLabel(&quot;Generate financial and activity reports with date filtering&quot;);&#10;        subtitleLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        subtitleLabel.setForeground(new Color(102, 102, 102));&#10;        headerContent.add(subtitleLabel, BorderLayout.SOUTH);&#10;&#10;        headerPanel.add(headerContent);&#10;        add(headerPanel, BorderLayout.PAGE_START);&#10;&#10;        // Main Content Panel with Split Pane (similar to AppointmentPanel)&#10;        JPanel mainPanel = new JPanel();&#10;        mainPanel.setBackground(new Color(247, 247, 247));&#10;        mainPanel.setMinimumSize(new Dimension(900, 700));&#10;        mainPanel.setPreferredSize(new Dimension(903, 700));&#10;        mainPanel.setLayout(new BorderLayout(10, 10));&#10;        mainPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));&#10;&#10;        // Create Split Pane&#10;        mainSplitPane = new JSplitPane();&#10;        mainSplitPane.setDividerLocation(360);&#10;        mainSplitPane.setDividerSize(0);&#10;        mainSplitPane.setMaximumSize(new Dimension(2147483647, 500));&#10;        mainSplitPane.setMinimumSize(new Dimension(800, 300));&#10;        mainSplitPane.setPreferredSize(new Dimension(1250, 510));&#10;&#10;        // Left Panel - Report Configuration Form&#10;        createFormPanel();&#10;        mainSplitPane.setLeftComponent(formPanel);&#10;&#10;        // Right Panel - Report Results&#10;        createResultsPanel();&#10;        mainSplitPane.setRightComponent(resultsPanel);&#10;&#10;        mainPanel.add(mainSplitPane, BorderLayout.CENTER);&#10;        add(mainPanel, BorderLayout.CENTER);&#10;    }&#10;&#10;    private void createFormPanel() {&#10;        formPanel = new JPanel();&#10;        formPanel.setBackground(new Color(247, 247, 247));&#10;        formPanel.setMaximumSize(new Dimension(300, 32767));&#10;        formPanel.setMinimumSize(new Dimension(300, 100));&#10;        formPanel.setPreferredSize(new Dimension(300, 510));&#10;        formPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 30, 0));&#10;&#10;        // Create the form card using GroupLayout like AppointmentPanel&#10;        RoundedPanel formCard = new RoundedPanel();&#10;        formCard.setBackground(Color.WHITE);&#10;        formCard.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        formCard.setMinimumSize(new Dimension(330, 600));&#10;&#10;        // Form elements&#10;        JLabel formTitle = new JLabel(&quot;Generate Report&quot;);&#10;        formTitle.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 24));&#10;        formTitle.setForeground(Color.BLACK);&#10;&#10;        JLabel formSubtitle = new JLabel(&quot;Configure and generate system reports&quot;);&#10;        formSubtitle.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        formSubtitle.setForeground(new Color(153, 153, 153));&#10;&#10;        JLabel reportLabel = new JLabel(&quot;Report Type&quot;);&#10;        reportLabel.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        reportLabel.setForeground(new Color(51, 51, 51));&#10;&#10;        reportTypeComboBox = new JComboBox&lt;&gt;();&#10;        reportTypeComboBox.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        reportTypeComboBox.setBackground(Color.WHITE);&#10;&#10;        JLabel fromLabel = new JLabel(&quot;From Date&quot;);&#10;        fromLabel.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        fromLabel.setForeground(new Color(51, 51, 51));&#10;&#10;        fromDateSpinner = new JSpinner(new SpinnerDateModel());&#10;        JSpinner.DateEditor fromDateEditor = new JSpinner.DateEditor(fromDateSpinner, &quot;dd/MM/yyyy&quot;);&#10;        fromDateSpinner.setEditor(fromDateEditor);&#10;        fromDateSpinner.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        Date defaultFromDate = Date.from(LocalDate.now().minusDays(30).atStartOfDay(ZoneId.systemDefault()).toInstant());&#10;        fromDateSpinner.setValue(defaultFromDate);&#10;&#10;        JLabel toLabel = new JLabel(&quot;To Date&quot;);&#10;        toLabel.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        toLabel.setForeground(new Color(51, 51, 51));&#10;&#10;        toDateSpinner = new JSpinner(new SpinnerDateModel());&#10;        JSpinner.DateEditor toDateEditor = new JSpinner.DateEditor(toDateSpinner, &quot;dd/MM/yyyy&quot;);&#10;        toDateSpinner.setEditor(toDateEditor);&#10;        toDateSpinner.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        toDateSpinner.setValue(new Date());&#10;&#10;        generateButton = new JButton(&quot;Generate Report&quot;);&#10;        generateButton.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 14));&#10;        generateButton.setForeground(Color.WHITE);&#10;        generateButton.setBackground(new Color(0, 153, 255));&#10;&#10;        // Use GroupLayout like AppointmentPanel&#10;        javax.swing.GroupLayout formCardLayout = new javax.swing.GroupLayout(formCard);&#10;        formCard.setLayout(formCardLayout);&#10;        formCardLayout.setHorizontalGroup(&#10;            formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(formCardLayout.createSequentialGroup()&#10;                .addGap(13, 13, 13)&#10;                .addGroup(formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;                    .addComponent(reportTypeComboBox, 0, 312, Short.MAX_VALUE)&#10;                    .addComponent(fromDateSpinner)&#10;                    .addComponent(toDateSpinner)&#10;                    .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)&#10;                    .addGroup(formCardLayout.createSequentialGroup()&#10;                        .addGroup(formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;                            .addComponent(formTitle)&#10;                            .addComponent(formSubtitle)&#10;                            .addComponent(reportLabel)&#10;                            .addComponent(fromLabel)&#10;                            .addComponent(toLabel))&#10;                        .addGap(0, 0, Short.MAX_VALUE)))&#10;                .addGap(14, 14, 14))&#10;        );&#10;        formCardLayout.setVerticalGroup(&#10;            formCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(formCardLayout.createSequentialGroup()&#10;                .addGap(20, 20, 20)&#10;                .addComponent(formTitle)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(formSubtitle)&#10;                .addGap(18, 18, 18)&#10;                .addComponent(reportLabel)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(reportTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(12, 12, 12)&#10;                .addComponent(fromLabel)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(fromDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(12, 12, 12)&#10;                .addComponent(toLabel)&#10;                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)&#10;                .addComponent(toDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(18, 18, 18)&#10;                .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)&#10;                .addGap(28, 28, 28))&#10;        );&#10;&#10;        formPanel.add(formCard);&#10;    }&#10;&#10;    private void createResultsPanel() {&#10;        resultsPanel = new JPanel();&#10;        resultsPanel.setBackground(new Color(247, 247, 247));&#10;        resultsPanel.setMaximumSize(new Dimension(2147483647, 600));&#10;        resultsPanel.setPreferredSize(new Dimension(831, 600));&#10;        resultsPanel.setLayout(new BorderLayout(30, 0));&#10;&#10;        // Create the results card exactly like AppointmentPanel's roundedPanel2&#10;        RoundedPanel resultsCard = new RoundedPanel();&#10;        resultsCard.setBackground(Color.WHITE);&#10;        resultsCard.setForeground(new Color(234, 234, 234));&#10;        resultsCard.setMaximumSize(new Dimension(32767, 600));&#10;        resultsCard.setMinimumSize(new Dimension(0, 600));&#10;        resultsCard.setPreferredSize(new Dimension(811, 600));&#10;&#10;        // Header elements&#10;        JLabel resultsTitle = new JLabel(&quot;Report Results&quot;);&#10;        resultsTitle.setFont(new Font(&quot;Inter 18pt SemiBold&quot;, Font.PLAIN, 24));&#10;        resultsTitle.setForeground(Color.BLACK);&#10;&#10;        JButton refreshButton = new JButton(&quot;Refresh&quot;);&#10;        refreshButton.setFont(new Font(&quot;Inter 18pt Medium&quot;, Font.PLAIN, 12));&#10;        refreshButton.setForeground(Color.WHITE);&#10;        refreshButton.setBackground(new Color(0, 153, 255));&#10;        refreshButton.addActionListener(e -&gt; onGenerateReport());&#10;&#10;        // Cards container&#10;        cardsPanel = new JPanel();&#10;        cardsPanel.setBackground(Color.WHITE);&#10;        cardsPanel.setForeground(Color.WHITE);&#10;        cardsPanel.setLayout(new BoxLayout(cardsPanel, BoxLayout.Y_AXIS));&#10;&#10;        JScrollPane cardsScrollPane = new JScrollPane(cardsPanel);&#10;        cardsScrollPane.setBackground(Color.WHITE);&#10;        cardsScrollPane.setBorder(BorderFactory.createEmptyBorder(1, 1, 30, 1));&#10;        cardsScrollPane.setForeground(Color.WHITE);&#10;&#10;        // Add initial instruction card&#10;        cardsPanel.add(createInstructionCard());&#10;&#10;        // Use GroupLayout exactly like AppointmentPanel's roundedPanel2&#10;        javax.swing.GroupLayout resultsCardLayout = new javax.swing.GroupLayout(resultsCard);&#10;        resultsCard.setLayout(resultsCardLayout);&#10;        resultsCardLayout.setHorizontalGroup(&#10;            resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, resultsCardLayout.createSequentialGroup()&#10;                .addGap(21, 21, 21)&#10;                .addGroup(resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;                    .addGroup(resultsCardLayout.createSequentialGroup()&#10;                        .addComponent(resultsTitle)&#10;                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)&#10;                        .addComponent(refreshButton))&#10;                    .addComponent(cardsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE))&#10;                .addGap(20, 20, 20))&#10;        );&#10;        resultsCardLayout.setVerticalGroup(&#10;            resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&#10;            .addGroup(resultsCardLayout.createSequentialGroup()&#10;                .addGap(24, 24, 24)&#10;                .addGroup(resultsCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)&#10;                    .addComponent(resultsTitle)&#10;                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))&#10;                .addGap(18, 18, 18)&#10;                .addComponent(cardsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)&#10;                .addContainerGap())&#10;        );&#10;&#10;        resultsPanel.add(resultsCard, BorderLayout.CENTER);&#10;    }&#10;&#10;    private void displayReportCards(ReportVisitor visitor, String reportType, int totalElements) {&#10;        cardsPanel.removeAll();&#10;&#10;        List&lt;RoundedPanel&gt; cards;&#10;&#10;        if (&quot;Financial Report&quot;.equals(reportType)) {&#10;            cards = getFinancialReportCards((FinancialReportVisitor) visitor, totalElements);&#10;        } else {&#10;            cards = getActivityReportCards((ActivityReportVisitor) visitor, totalElements);&#10;        }&#10;&#10;        // Add cards with gaps between them&#10;        for (int i = 0; i &lt; cards.size(); i++) {&#10;            RoundedPanel card = cards.get(i);&#10;            card.setAlignmentX(JPanel.LEFT_ALIGNMENT);&#10;            card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));&#10;            cardsPanel.add(card);&#10;&#10;            // Add gap between cards (except after the last card)&#10;            if (i &lt; cards.size() - 1) {&#10;                cardsPanel.add(javax.swing.Box.createVerticalStrut(10));&#10;            }&#10;        }&#10;&#10;        cardsPanel.revalidate();&#10;        cardsPanel.repaint();&#10;    }&#10;&#10;    private List&lt;RoundedPanel&gt; getFinancialReportCards(FinancialReportVisitor visitor, int totalElements) {&#10;        List&lt;RoundedPanel&gt; cards = new ArrayList&lt;&gt;();&#10;        &#10;        // Simple formatting - just add &quot;Rs.&quot; prefix to the amounts&#10;        cards.add(createModernMetricCard(&quot;Total Revenue&quot;,&#10;            &quot;Rs. &quot; + String.format(&quot;%.2f&quot;, visitor.getTotalRevenue()),&#10;            &quot;Revenue from all sources&quot;, &quot;profit-up_1.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Direct Payments&quot;,&#10;            &quot;Rs. &quot; + String.format(&quot;%.2f&quot;, visitor.getTotalRevenueFromAppointments()),&#10;            visitor.getVisitedAppointments() + &quot; appointments processed&quot;, &quot;cash-payment.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Insurance Claims&quot;,&#10;            &quot;Rs. &quot; + String.format(&quot;%.2f&quot;, visitor.getTotalRevenueFromClaims()),&#10;            visitor.getVisitedClaims() + &quot; claims processed&quot;, &quot;claim.png&quot;));&#10;&#10;        Date fromDate = (Date) fromDateSpinner.getValue();&#10;        Date toDate = (Date) toDateSpinner.getValue();&#10;        cards.add(createModernSummaryCard(&quot;Report Summary&quot;,&#10;            &quot;Total Elements: &quot; + totalElements + &quot;\n&quot; +&#10;            &quot;Appointments: &quot; + visitor.getVisitedAppointments() + &quot;\n&quot; +&#10;            &quot;Claims: &quot; + visitor.getVisitedClaims() + &quot;\n&quot; +&#10;            &quot;Period: &quot; + new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;).format(fromDate) +&#10;            &quot; to &quot; + new java.text.SimpleDateFormat(&quot;dd/MM/yyyy&quot;).format(toDate),&#10;            &quot;report.png&quot;));&#10;&#10;        return cards;&#10;    }&#10;&#10;    private List&lt;RoundedPanel&gt; getActivityReportCards(ActivityReportVisitor visitor, int totalElements) {&#10;        List&lt;RoundedPanel&gt; cards = new ArrayList&lt;&gt;();&#10;&#10;        cards.add(createModernMetricCard(&quot;Scheduled Appointments&quot;,&#10;            String.valueOf(visitor.getScheduledAppointments()),&#10;            &quot;Upcoming appointments&quot;, &quot;accounting.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Completed Appointments&quot;,&#10;            String.valueOf(visitor.getCompletedAppointments()),&#10;            &quot;Finished appointments&quot;, &quot;check.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Pending Claims&quot;,&#10;            String.valueOf(visitor.getPendingClaims()),&#10;            &quot;Claims awaiting processing&quot;, &quot;online-doctor.png&quot;));&#10;&#10;        cards.add(createModernMetricCard(&quot;Closed Claims&quot;,&#10;            String.valueOf(visitor.getClosedClaims()),&#10;            &quot;Processed claims&quot;, &quot;safety.png&quot;));&#10;&#10;        cards.add(createModernSummaryCard(&quot;Activity Summary&quot;,&#10;            &quot;Total Elements: &quot; + totalElements + &quot;\n&quot; +&#10;            &quot;Total Appointments: &quot; + visitor.getTotalAppointments() + &quot;\n&quot; +&#10;            &quot;Total Claims: &quot; + visitor.getTotalClaims(),&#10;            &quot;health-report.png&quot;));&#10;&#10;        return cards;&#10;    }&#10;&#10;    private RoundedPanel createModernMetricCard(String title, String mainValue, String subtitle, String iconName) {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        // Make cards full width like AppointmentCards&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));&#10;        card.setMinimumSize(new Dimension(400, 120));&#10;        card.setPreferredSize(new Dimension(800, 120));&#10;&#10;        // Left content panel for text&#10;        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));&#10;        leftPanel.setOpaque(false);&#10;&#10;        // Title at top left&#10;        JLabel titleLabel = new JLabel(title);&#10;        titleLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        titleLabel.setForeground(new Color(44, 62, 80));&#10;        leftPanel.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        // Main value in center left&#10;        JLabel valueLabel = new JLabel(mainValue);&#10;        valueLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 28));&#10;        valueLabel.setForeground(new Color(52, 152, 219));&#10;        leftPanel.add(valueLabel, BorderLayout.CENTER);&#10;&#10;        // Subtitle at bottom left&#10;        JLabel subtitleLabel = new JLabel(subtitle);&#10;        subtitleLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;        subtitleLabel.setForeground(new Color(127, 140, 141));&#10;        leftPanel.add(subtitleLabel, BorderLayout.SOUTH);&#10;&#10;        card.add(leftPanel, BorderLayout.CENTER);&#10;&#10;        // Right panel for icon at top right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 120));&#10;&#10;        // Icon at top right&#10;        try {&#10;            ImageIcon icon = new ImageIcon(getClass().getResource(&quot;/img/&quot; + iconName));&#10;            Image scaledImage = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);&#10;            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));&#10;            iconLabel.setHorizontalAlignment(SwingConstants.CENTER);&#10;            iconLabel.setVerticalAlignment(SwingConstants.TOP);&#10;            iconLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(iconLabel, BorderLayout.NORTH);&#10;        } catch (Exception e) {&#10;            // Fallback: create a simple colored icon as placeholder&#10;            JLabel placeholderIcon = new JLabel(&quot;●&quot;);&#10;            placeholderIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 32));&#10;            placeholderIcon.setForeground(new Color(52, 152, 219));&#10;            placeholderIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;            placeholderIcon.setVerticalAlignment(SwingConstants.TOP);&#10;            placeholderIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(placeholderIcon, BorderLayout.NORTH);&#10;        }&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    private RoundedPanel createModernSummaryCard(String title, String content, String iconName) {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        // Make cards full width like AppointmentCards&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 140));&#10;        card.setMinimumSize(new Dimension(400, 140));&#10;        card.setPreferredSize(new Dimension(800, 140));&#10;&#10;        // Left content panel for text&#10;        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));&#10;        leftPanel.setOpaque(false);&#10;&#10;        // Title at top left&#10;        JLabel titleLabel = new JLabel(title);&#10;        titleLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        titleLabel.setForeground(new Color(44, 62, 80));&#10;        leftPanel.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        // Content in center left&#10;        String[] lines = content.split(&quot;\n&quot;);&#10;        JPanel contentPanel = new JPanel();&#10;        contentPanel.setLayout(new BoxLayout(contentPanel, BoxLayout.Y_AXIS));&#10;        contentPanel.setOpaque(false);&#10;&#10;        for (int i = 0; i &lt; lines.length &amp;&amp; i &lt; 5; i++) {&#10;            JLabel lineLabel = new JLabel(lines[i]);&#10;            lineLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;            lineLabel.setForeground(new Color(52, 73, 94));&#10;            lineLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);&#10;            contentPanel.add(lineLabel);&#10;        }&#10;&#10;        leftPanel.add(contentPanel, BorderLayout.CENTER);&#10;        card.add(leftPanel, BorderLayout.CENTER);&#10;&#10;        // Right panel for icon at top right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 140));&#10;&#10;        // Icon at top right&#10;        try {&#10;            ImageIcon icon = new ImageIcon(getClass().getResource(&quot;/img/&quot; + iconName));&#10;            Image scaledImage = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);&#10;            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));&#10;            iconLabel.setHorizontalAlignment(SwingConstants.CENTER);&#10;            iconLabel.setVerticalAlignment(SwingConstants.TOP);&#10;            iconLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(iconLabel, BorderLayout.NORTH);&#10;        } catch (Exception e) {&#10;            // Fallback: create a simple colored shape as placeholder&#10;            JLabel placeholderIcon = new JLabel(&quot;◆&quot;);&#10;            placeholderIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 28));&#10;            placeholderIcon.setForeground(new Color(149, 165, 166));&#10;            placeholderIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;            placeholderIcon.setVerticalAlignment(SwingConstants.TOP);&#10;            placeholderIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(placeholderIcon, BorderLayout.NORTH);&#10;        }&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    private RoundedPanel createLoadingCard() {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 120));&#10;        card.setMinimumSize(new Dimension(400, 120));&#10;        card.setPreferredSize(new Dimension(800, 120));&#10;&#10;        // Loading text on left&#10;        JLabel loadingLabel = new JLabel(&quot;Generating report...&quot;);&#10;        loadingLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        loadingLabel.setForeground(new Color(52, 152, 219));&#10;        card.add(loadingLabel, BorderLayout.CENTER);&#10;&#10;        // Loading icon on right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 120));&#10;&#10;        JLabel loadingIcon = new JLabel(&quot;⟳&quot;);&#10;        loadingIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 32));&#10;        loadingIcon.setForeground(new Color(52, 152, 219));&#10;        loadingIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;        loadingIcon.setVerticalAlignment(SwingConstants.TOP);&#10;        loadingIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;        rightPanel.add(loadingIcon, BorderLayout.NORTH);&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    private RoundedPanel createInstructionCard() {&#10;        RoundedPanel card = new RoundedPanel();&#10;        card.setLayout(new BorderLayout(10, 5));&#10;        card.setBackground(Color.WHITE);&#10;        card.setForeground(new Color(220, 220, 220)); // Light gray foreground&#10;        // Remove border completely&#10;        card.setBorder(BorderFactory.createEmptyBorder(15, 15, 15, 15));&#10;        card.setMaximumSize(new Dimension(Integer.MAX_VALUE, 140));&#10;        card.setMinimumSize(new Dimension(400, 140));&#10;        card.setPreferredSize(new Dimension(800, 140));&#10;&#10;        // Left content panel for text&#10;        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));&#10;        leftPanel.setOpaque(false);&#10;&#10;        // Title at top left&#10;        JLabel titleLabel = new JLabel(&quot;Welcome to Reports&quot;);&#10;        titleLabel.setFont(new Font(&quot;Inter&quot;, Font.BOLD, 16));&#10;        titleLabel.setForeground(new Color(44, 62, 80));&#10;        leftPanel.add(titleLabel, BorderLayout.NORTH);&#10;&#10;        // Instructions in center left&#10;        JPanel instructionPanel = new JPanel();&#10;        instructionPanel.setLayout(new BoxLayout(instructionPanel, BoxLayout.Y_AXIS));&#10;        instructionPanel.setOpaque(false);&#10;&#10;        String[] instructions = {&#10;            &quot;1. Select report type &amp; date range&quot;,&#10;            &quot;2. Click Generate to view results&quot;,&#10;            &quot;3. Data will appear as cards below&quot;&#10;        };&#10;&#10;        for (String instruction : instructions) {&#10;            JLabel lineLabel = new JLabel(instruction);&#10;            lineLabel.setFont(new Font(&quot;Inter&quot;, Font.PLAIN, 12));&#10;            lineLabel.setForeground(new Color(52, 73, 94));&#10;            lineLabel.setAlignmentX(JLabel.LEFT_ALIGNMENT);&#10;            instructionPanel.add(lineLabel);&#10;        }&#10;&#10;        leftPanel.add(instructionPanel, BorderLayout.CENTER);&#10;        card.add(leftPanel, BorderLayout.CENTER);&#10;&#10;        // Right panel for icon at top right&#10;        JPanel rightPanel = new JPanel(new BorderLayout());&#10;        rightPanel.setOpaque(false);&#10;        rightPanel.setPreferredSize(new Dimension(60, 140));&#10;&#10;        // Welcome icon&#10;        try {&#10;            ImageIcon icon = new ImageIcon(getClass().getResource(&quot;/img/dashboard.png&quot;));&#10;            Image scaledImage = icon.getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH);&#10;            JLabel iconLabel = new JLabel(new ImageIcon(scaledImage));&#10;            iconLabel.setHorizontalAlignment(SwingConstants.CENTER);&#10;            iconLabel.setVerticalAlignment(SwingConstants.TOP);&#10;            iconLabel.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(iconLabel, BorderLayout.NORTH);&#10;        } catch (Exception e) {&#10;            // Fallback icon&#10;            JLabel placeholderIcon = new JLabel(&quot;&quot;);&#10;            placeholderIcon.setFont(new Font(&quot;Arial&quot;, Font.BOLD, 32));&#10;            placeholderIcon.setHorizontalAlignment(SwingConstants.CENTER);&#10;            placeholderIcon.setVerticalAlignment(SwingConstants.TOP);&#10;            placeholderIcon.setBorder(BorderFactory.createEmptyBorder(10, 0, 0, 0));&#10;            rightPanel.add(placeholderIcon, BorderLayout.NORTH);&#10;        }&#10;&#10;        card.add(rightPanel, BorderLayout.EAST);&#10;&#10;        return card;&#10;    }&#10;&#10;    // Variables declaration - do not modify//GEN-BEGIN:variables&#10;    // End of variables declaration//GEN-END:variables&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>